---

  # web:
  #   build: .
  #   image: ghcr.io/mastodon/mastodon:v4.2.7
  #   restart: always
  #   env_file: .env.production
  #   command: bundle exec puma -C config/puma.rb
  #   networks:
  #     - external_network
  #     - internal_network
  #   healthcheck:
  #     # prettier-ignore
  #     test: ['CMD-SHELL', 'wget -q --spider --proxy=off localhost:3000/health || exit 1']
  #   ports:
  #     - '127.0.0.1:3000:3000'
  #   depends_on:
  #     - db
  #     - redis
  #     # - es
  #   volumes:
  #     - ./public/system:/mastodon/public/system


apiVersion:           apps/v1
kind:                 Deployment
metadata:
  name:               mastodon-web
  labels:
    app:              mastodon-web
spec:
  replicas:           1
  selector:
    matchLabels:
      app:            mastodon-web
  template:
    metadata:
      labels:
        app:          mastodon-web
    spec:
      containers:
      - name:         mastodon-web
        image:        ghcr.io/mastodon/mastodon:v4.2.7
        command:      ["bundle"]
        args:         ["exec", "puma", "-C", "config/puma.rb"]
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 15
          periodSeconds: 10
        readinessProbe:
          tcpSocket:
            port: 3000
          initialDelaySeconds: 15
          periodSeconds: 10
        ports:
        - containerPort: 3000
        resources:
          limits:
            memory:   200Mi
            cpu:      1
          requests:
            memory:   100Mi
            cpu:      100m
        volumeMounts:
        # - name:       mastodon-system
        #   mountPath:  /mastodon/public/system
        - name:       secret-volume
          readOnly: true
          mountPath:  "/opt/mastodon"
      volumes:
      # - name:         mastodon-system
      #   emptyDir:     {}
      - name:         secret-volume
        secret:
          secretName: mastodon-env-production


