---

apiVersion:         argoproj.io/v1alpha1
kind:               Application
metadata:
  name:             firefish-quakers-social
  namespace:        argocd
spec:
  project:          firefish-quakers-social
  source:
    path:           chart
    repoURL:        https://firefish.dev/iacore/firefish.git
    targetRevision: develop
    helm:
      valuesObject:
        firefish:
          isManagedHosting: true
          domain: firefish.local
          smtp:
            managed: true
            from_address: notifications@example.com
            port: 587
            server: smtp.mailgun.org
            useImplicitSslTls: false
            login: ""
            password: ""
          objectStorage:
            managed: true
            access_key: ""
            access_secret: ""
            baseUrl: "" # e.g. "https://my-bucket.nyc3.cdn.digitaloceanspaces.com"
            bucket: "" # e.g. "my-bucket"
            prefix: files
            endpoint: "" # e.g. "nyc3.digitaloceanspaces.com:443"
            region: "" # e.g. "nyc3"
          # -- If you want to allow firefish to connect to private ips, enter the cidrs here.
          allowedPrivateNetworks: []
          # - "10.0.0.0/8"
          reservedUsernames:
            - root
            - admin
            - administrator
            - me
            - system
        # https://github.com/bitnami/charts/tree/master/bitnami/postgresql#parameters
        postgresql:
          # -- disable if you want to use an existing db; in which case the values below
          # must match those of that external postgres instance
          enabled: true
          # postgresqlHostname: preexisting-postgresql
          # postgresqlPort: 5432
          auth:
            database: firefish_production
            username: firefish
            # you must set a password; the password generated by the postgresql chart will
            # be rotated on each upgrade:
            # https://github.com/bitnami/charts/tree/master/bitnami/postgresql#upgrade
            password: ""

        # https://github.com/bitnami/charts/tree/master/bitnami/redis#parameters
        redis:
          # disable if you want to use an existing redis instance; in which case the
          # values below must match those of that external redis instance
          enabled: true
          hostname: ""
          port: 6379
          auth:
            # -- you must set a password; the password generated by the redis chart will be
            # rotated on each upgrade:
            password: ""
        elasticsearch:
          enabled: false
        nameOverride: ""
        fullnameOverride: ""
        serviceAccount:
          # Specifies whether a service account should be created
          create: true
          # Annotations to add to the service account
          annotations: {}
          # The name of the service account to use.
          # If not set and create is true, a name is generated using the fullname template
          name: ""
        podAnnotations: {}
        podSecurityContext: {}
          # fsGroup: 2000
        securityContext: {}
          # capabilities:
          #   drop:
          #   - ALL
          # readOnlyRootFilesystem: true
          # runAsNonRoot: true
          # runAsUser: 1000
        service:
          type: ClusterIP
          port: 80
        ingress:
          enabled: false
        resources: {}
          # We usually recommend not to specify default resources and to leave this as a conscious
          # choice for the user. This also increases chances charts run on environments with little
          # resources, such as Minikube. If you do want to specify resources, uncomment the following
          # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
          # limits:
          #   cpu: 100m
          #   memory: 128Mi
          # requests:
          #   cpu: 100m
          #   memory: 128Mi
        autoscaling:
          enabled: false
  destination:
    server:         https://kubernetes.default.svc
    namespace:      argocd-aoa