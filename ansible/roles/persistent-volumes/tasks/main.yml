---




- name:                       create pv
  kubernetes.core.k8s:
    kubeconfig:               "{{ k3s_kubeconfig }}"
    state:                    "{{ persistent_volumes_state }}"
    wait:                     "yes"
    definition:
      kind:                   PersistentVolume
      apiVersion:             v1
      metadata:
        name:                 "local-{{ item }}"
        labels:
          type:               local
        annotations:
          storageclass.kubernetes.io/is-default-class: "false"
      spec:
        storageClassName:     "local-{{ item }}"
        capacity:
          storage:            1Gi
        accessModes:
          -                   ReadWriteMany
          # -                   ReadWriteOnce
        persistentVolumeReclaimPolicy: Retain
        local:
          path:               "/srv/persistent-volume-{{ item }}"
        nodeAffinity:
          required:
            nodeSelectorTerms:
            - matchExpressions:
              - key:          kubernetes.io/hostname
                operator:     In
                values:
                -             ubuntu-4gb-hel1-3
        # hostPath:
        #   path:           "/srv/persistent-volume-{{ item }}"
  loop:                   "{{ persistent_volumes_pvcs }}"

- name:                   set WaitForFirstConsumer
  kubernetes.core.k8s:
    kubeconfig:           "{{ k3s_kubeconfig }}"
    state:                "{{ persistent_volumes_state }}"
    wait:                 "yes"
    definition:
      apiVersion:         storage.k8s.io/v1
      kind:               StorageClass
      metadata:
        name:             "local-{{ item }}"
      provisioner:        kubernetes.io/no-provisioner
      volumeBindingMode:  WaitForFirstConsumer
  loop:                   "{{ persistent_volumes_pvcs }}"