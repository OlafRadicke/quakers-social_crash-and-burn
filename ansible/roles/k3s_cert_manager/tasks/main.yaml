---

- name: create namespaces
  kubernetes.core.k8s:
    kubeconfig:                 "{{ global_kubeconfig }}"
    state:                      "{{ k3s_cert_manager_state }}"
    wait:                       "yes"
    definition:
      api_version:              v1
      kind:                     Namespace
      metadata:
        name:                   "{{ k3s_cert_manager_namespaces }}"
        labels:
          name:                 "{{ k3s_cert_manager_namespaces }}"


- name: download operator
  ansible.builtin.get_url:
    url:                        "{{ k3s_cert_manager_download }}"
    dest:                       "/tmp/cert-manager.yaml"
    mode:                       '0440'

- name: create operator
  kubernetes.core.k8s:
    kubeconfig:                 "{{ global_kubeconfig }}"
    state:                      "{{ k3s_cert_manager_state }}"
    wait:                       "yes"
    src:                        "/tmp/cert-manager.yaml"
  when:                         not ansible_check_mode

- name: "add ClusterIssuer {{ k3s_cert_manager_production }}"
  kubernetes.core.k8s:
    kubeconfig:                 "{{ global_kubeconfig }}"
    state:                      "{{ k3s_cert_manager_state }}"
    namespace:                  "{{ k3s_cert_manager_namespaces }}"
    definition:
      apiVersion:               cert-manager.io/v1
      kind:                     ClusterIssuer
      metadata:
        name:                   "{{ k3s_cert_manager_production }}"
      spec:
        acme:
          email:                "{{ k3s_cert_manager_mail }}"
          server:               https://acme-v02.api.letsencrypt.org/directory
          privateKeySecretRef:
            name:               "{{ k3s_cert_manager_production }}"
          solvers:
            - http01:
                ingress:
                  class:        traefik
  when:                         not ansible_check_mode

- name: "add ClusterIssuer {{ k3s_cert_manager_stage }}"
  kubernetes.core.k8s:
    kubeconfig:                 "{{ global_kubeconfig }}"
    state:                      "{{ k3s_cert_manager_state }}"
    namespace:                  "{{ k3s_cert_manager_namespaces }}"
    definition:
      apiVersion:               cert-manager.io/v1
      kind:                     ClusterIssuer
      metadata:
        name:                   "{{ k3s_cert_manager_stage }}"
      spec:
        acme:
          email:                "{{ k3s_cert_manager_mail }}"
          server:               https://acme-staging-v02.api.letsencrypt.org/directory
          privateKeySecretRef:
            name:               "{{ k3s_cert_manager_stage }}"
          solvers:
            - http01:
                ingress:
                  class:        traefik
  when:                         not ansible_check_mode


