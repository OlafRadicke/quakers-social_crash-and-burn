# https://docs.joinmastodon.org/admin/install/
FROM debian:12

ARG M_VERSION=v4.2.8
ENV RUBY_CONFIGURE_OPTS=--with-jemalloc
ENV HOME="/home/mastodon"
ENV PATH="${HOME}/.rbenv/bin:$HOME/.rbenv/live/bin:$HOME/node_modules/.bin:$PATH"
ENV RAILS_ENV=production

RUN apt update && apt install -y curl wget gnupg apt-transport-https lsb-release ca-certificates
RUN curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /etc/apt/nodesource.gpg
RUN echo "deb [signed-by=/etc/apt/nodesource.gpg] https://deb.nodesource.com/node_20.x nodistro main" | tee /etc/apt/sources.list.d/nodesource.list
RUN apt update
RUN apt install -y \
    imagemagick ffmpeg libpq-dev libxml2-dev libxslt1-dev file git-core \
    g++ libprotobuf-dev protobuf-compiler pkg-config gcc autoconf \
    bison build-essential libssl-dev libyaml-dev libreadline6-dev \
    zlib1g-dev libncurses5-dev libffi-dev libgdbm-dev \
    nginx nodejs redis-server redis-tools postgresql postgresql-contrib \
    certbot python3-certbot-nginx libidn11-dev libicu-dev libjemalloc-dev \
    rubygems ruby-dev

RUN corepack enable
RUN yarn set version classic
RUN adduser --disabled-login mastodon
RUN chown mastodon:mastodon -Rv ${HOME}
# USER mastodon
WORKDIR ${HOME}

RUN git clone https://github.com/rbenv/rbenv.git ${HOME}/.rbenv --depth=1
# RUN ${HOME}/.rbenv/src/configure \
#     && make -C ${HOME}/.rbenv/src

WORKDIR ${HOME}/.rbenv
RUN echo "$(rbenv init -)"
RUN eval "$(rbenv init -)"
RUN git clone https://github.com/rbenv/ruby-build.git \
	   --depth=1 \
	   ${HOME}/.rbenv/plugins/ruby-build
RUN pwd
RUN rbenv install 3.2.3 \
    && rbenv global 3.2.3 \
    && gem install bundler --no-document
RUN git clone --depth 1 --branch  ${M_VERSION} \
	   https://github.com/mastodon/mastodon.git \
	   live

RUN bundle config deployment 'true'
RUN bundle config without 'development test'
RUN bundle install -j$(getconf _NPROCESSORS_ONLN)
RUN yarn install --pure-lockfile
RUN find ./ -name "*akefile*"
WORKDIR ${HOME}/.rbenv/live
# RUN rake mastodon:media:clear
# RUN rake mastodon:push:clear
RUN OTP_SECRET=precompile_placeholder \
    SECRET_KEY_BASE=precompile_placeholder \
    RAILS_ENV=production \
    rails assets:precompile
ENTRYPOINT ["/entryscript.sh"]
